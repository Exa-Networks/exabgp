# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main, 4.2, 3.4 ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    # runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4.7.1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f qa/requirements.txt ]; then pip install -r qa/requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --exclude src/exabgp/vendoring/ --exclude build/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Configuration Parsing Checks
      run: |
        ./qa/bin/functional parsing

    - name: Functional Checks
      run: |
        ./qa/bin/functional encoding

    - name: Decoding Checks
      run: |
        ./qa/bin/functional decoding

    - name: Test Coverage
      run: |
        env PYTHONPATH=src exabgp_log_enable=false pytest --cov --cov-reset ./tests/*_test.py

    # - name: Coveralls
    #   run: |
    #     coveralls

#     - name: Test with pytest
#       run: |
#         pytest

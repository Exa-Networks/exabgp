[build-system]
requires = ["setuptools", "wheel"]

[tool.poetry]
name = 'exabgp'
version = '5.0.0'
description = 'BGP swiss army knife'
authors = ['Thomas Mangin <thomas.mangin@exa-networks.co.uk>']
readme = 'README.md'
repository = 'https://github.com/exa-networks/exabgp'
homepage = 'https://github.com/exa-networks/exabgp'
documentation = 'https://github.com/Exa-Networks/exabgp/wiki'
license = 'BSD-3-Clause'
keywords = [
	'bgp',
	'ddos-protection',
	'health-check',
	'flowspec',
	'bgp-ls',
	'mpls',
	'vpls',
]
classifiers = [
	'Development Status :: 5 - Production/Stable',
	'Environment :: Console',
	'Intended Audience :: System Administrators',
	'Intended Audience :: Telecommunications Industry',
	'License :: OSI Approved :: BSD License',
	'Operating System :: POSIX',
	'Operating System :: MacOS :: MacOS X',
	'Programming Language :: Python',
	'Programming Language :: Python :: 3.7',
	'Topic :: Internet',
]
include = ["*.txt", "*.rst"]

# [[tool.poetry.source]]
# name = 'private'
# url = 'http://example.com/simple'

[tool.poetry.dependencies]
python = ">=3.8.1,<3.13"
# pygments-yang-lexer = "^0.2"
# pyang = "^2.3.2"
# pyangbind="^0.8.1"

# Optional dependencies (development)
[tool.poetry.dev-dependencies]
bandit = { version = "^1.7.4" }
black = { version = "^24.3.0" }
coveralls = { version = "^3.3.1" }
# dephell = { version= "^0.8.3", optional = true  }
flake8 = { version = "^6.0.0" }
flake8-bugbear = { version = "^22.12.6" }
flakehell = { version = "^0.9.0" }
isort = { version = "^5.11.4" }
pex = { version = "^2.1.120" }
psutil = { version = "^5.9.4" }
pudb = { version = "^2024.1" }
pytest = { version = "^7.2.0" }
pytest-cov = { version = "^4.0.0" }
wheel = { version = "^0.38.4" }
mistune = { version = "^2.0.4", optional = true }

[tool.poetry.extras]
debug = ["pudb"]
developer = ["pudb", "flake8", "coveralls", "pytest", "pytest-cov", "psutil"]

[tool.poetry.scripts]
exabgp = 'exabgp.application.main:main'
exabgp-cli = 'exabgp.application.cli:main'
exabgp-healthcheck = 'exabgp.application.healthcheck:main'

[tool.black]
line-length = 120
target-version = [
	'py36',
	'py37',
	'py38',
	'py39',
	'py310',
	'py311',
	'py312',
	'py313',
]
skip_string_normalization = '1'
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/data
)/
'''

[tool.flakehell]
max-line-length = 120
show-source = true

format = "grouped"

[tool.flakehell.plugins]
pyflakes = ["+*", "-F401"]
flake8-bandit = ["-*", "+S1??"]
"flake8-*" = ["+*"]
flake8-docstrings = ["-*"]

# [tool.dephell.main]
# from = 'poetry'
# to = 'requirements.txt'

[flake8]
max-line-length = 120
show-source = true

max-complexity = 18
statistics = true
exclude = '.git,.tox,__pycache__,build,dist,tests/*,src/exabgp/vendoring/*,'

select = 'B,C,E,F,W,T4,B9'
# E131 continuation line unaligned for hanging indent
# E203 whitespace before ':'
# E222 multiple spaces after operator
# E231 missing whitespace after ','
# E241 multiple spaces after ':'
# E266 
# E501 line too long
# W191
# W503
# F401 imported but unused
# F403
# the last , is required otherwise the last error ignore is not applied
ignore = 'E222,E231,E241,E131,E203,E266,E501,W503,F403,F401,'
variable-rgx = "[a-z_][a-z0-9_]{0,30}$"

# pycodestyle (formerly called pep8)
[pycodestyle]
max_line_length = 120
ignore = 'W191'
